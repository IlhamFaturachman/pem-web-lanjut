1. Fungsi APP_KEY
Digunakan untuk enkripsi data sensitif dalam Laravel, seperti session dan token reset password.

2. Cara Generate APP_KEY
Jalankan perintah:
php artisan key:generate

3. Jumlah dan Fungsi Default File Migrasi
Laravel memiliki 3 file migrasi default:
- create_users_table.php → Tabel pengguna
- create_password_reset_tokens_table.php → Token reset password
- create_failed_jobs_table.php → Job yang gagal

4. Fungsi $table->timestamps();
Menambahkan kolom created_at dan updated_at untuk mencatat waktu pembuatan dan pembaruan data.

5. Tipe Data $table->id();
Menghasilkan kolom primary key bertipe BIGINT UNSIGNED AUTO_INCREMENT.

6. Perbedaan $table->id(); dan $table->id('level_id');
$table->id(); membuat kolom id, sedangkan $table->id('level_id'); membuat kolom dengan nama level_id.

7. Fungsi $table->unique();
Mencegah duplikasi data pada kolom tertentu.

8. Kenapa level_id di m_user pakai unsignedBigInteger()?
Karena level_id di m_level bertipe BIGINT UNSIGNED, jadi harus cocok di m_user.

9. Fungsi Hash dan Hash::make('1234');
Hash digunakan untuk enkripsi password.
Hash::make('1234'); mengubah "1234" menjadi hash sebelum disimpan ke database.

10. Fungsi tanda tanya (?) dalam Query Builder
Digunakan sebagai parameter binding untuk mencegah SQL Injection dan menerima input dinamis.

11. Fungsi protected $table dan protected $primaryKey dalam Model
- protected $table = 'm_user'; → Menentukan tabel yang digunakan oleh model.
- protected $primaryKey = 'user_id'; → Menentukan primary key tabel.

12. Mana yang lebih mudah untuk CRUD?
Eloquent ORM lebih mudah karena sintaksnya lebih singkat, mendukung relasi otomatis, dan lebih aman dari SQL Injection.
Contoh:
User::find(1);
dibandingkan dengan Query Builder:
DB::table('m_user')->where('user_id', 1)->first();
